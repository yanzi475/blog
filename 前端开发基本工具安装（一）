
## 工具安装整理 ##

 工欲善其事，必先利其器。以下是最近安装倒腾的工具，然后，简单的梳理下，以便以后查阅。

## 开发工具 ##

作为前端开发工具，之前一直是使用sublime ，webstorm 和IntelliJ IDEA ,前一个是免费的，后两个都需要激活码，网上搜下就可以了，根据需要选择自己熟悉的（指的是快捷键的熟练程度）。以及相关插件。
   对于Mac ，首先在APPStore 中安装xcode ,在进行安装[homebrew](http://brew.sh/index_zh-cn.html)的使用— OS X 不可或缺的套件管理器 ，
打开终端窗口, 粘贴以上脚本：   
      
	/usr/bin/ruby -e "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/instal)"
	
   
安装好brew 之后，只需一条命令就可以安装node 以及相关软件。

* 安装Node.js 和 npm : brew install node



## 版本管理工具 ##


* 安装Gulp : npm install -g gulp
* 安装 webpack : npm install -g webpack
* 下载安装git
* 下载安装，任选其一SourceTree/SmartGit


## android和 ios 模拟工具 ##
* 安装jdk和 Android studio 
* 安装模拟器 Gemymotion
* 安装 Cordova  终端命令sudo npm install -g cordova@5.1.1


## 代码管理工具 source tree 使用 ##
* 克隆/新建：创建一个新仓库，或者从服务器克隆，或者加载本地已经有的
* 提交：git命令的commit，上传到本地仓库
* 检出：checkout，其实就是切换，切换不同分支，切换一个分支的不同版本
* 丢弃：回到最近一次add或者commit的状态。
* 暂存：git stash，手头工作没有完成的时候，保存一下现场
* 添加：add，把工作区的修改添加到暂缓区
* 获取和拉取：git fetch和git pull，获取是从远端获取最新版本到本地，但是不会自动合并，而拉取是会自动合并。fetch更安全一些，可以查看更新情况，然后决定是否合并。
* 推送：push,本地数据库的更新上传到远端。
* 分支：创建或者删除分支。
* 合并：分支的合并
* 标签：给每个版本定义个标签
* Git工作流：一般master是总的主枝，每个人开发的时候都自己定义一个dev分支是自己的主枝，当没有问题的时候提交到master，然后每个人自己开发新功能的时候创建一个feature功能分支，修改BUG时要单独拿出一个BUG分支。
* 命令行模式：可以输入git命令

## 效率工具 ##

* 安装 [Alfred](https://www.alfredapp.com/)
* 安装[item2](hhttps://www.iterm2.com/)
* 下载安装git
* 下载安装，任选其一SourceTree/SmartGit
* 代理工具shadowsocks


